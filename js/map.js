var autoLocation = !1, idLocation = null, successCallback = null, _marker = null, _0x3c20 = ["hide", "ukopani", "#form-gdpr", "init", "left", '"  data-x="', "apply", "userAgent", "https:", "Đakovo", "removeClass", "byLayer", "pan", '<span class="search-graveyard-name uk-margin-small-left">', "height", "each", ' uk-icon="info"></span>SAVJET: Za točnije rezultate koristite dijakritičke znakove ... </div>', "WGS84", "#app-modified span", "hidden", "log", ".app-overlay", "split", "#show-on-map-btn", "floor", "innerHTML", '<div id="form-info" class="info-box uk-padding-small">', "done", "toLocaleDateString", "No permission to get geolocation.", "projection", "prototype", "click", "test", "Color", "width", "clear", "add", "GRAVE_INFO_OPENED", "#form-name", "exception", "#img-overlay", "replace", "#oznaka", "geolocation", "    </div>", "bottom-left", "#report-btn", "#contact-form", "landing-img-", "table", "latitude", "bounds", '<div class="uk-margin-bottom">Nema rezultata ...</div>', "map", "transform", "console", "getElementsByClassName", "top", "#form-email", "__proto__", "exposeJQuery", '<li data-id="', "defs", "toString", "mail.php", "hr-HR", "oznaka", "features", "POST", '" data-y="', "center", "#slika", "removeAttr", "accuracy", "#form-warning", "while (true) {}", "units", "navigator", "Molimo popunite sva polja!", "graphic", "#menu-sidepanel", "NAVIGATION_OPENED", "text", "debu", "#faq-btn", "Bounds", "message", "which", "modal", "function *\\( *\\)", "        </a>", "tools", "MODAL_TUTORIAL_OPENED", "wkt", "Želite li zatvoriti aplikaciju?", ".form-warning-text", "cos", " <div>", "featureClick", "highlightSelected", "coords", "ViewerSelection", "pushState", "#search-bar", "groblje = '", "Došlo je do greške prilikom slanja poruke. Molimo pokušajte kasnije!", "Geolocation request timed out.", '{}.constructor("return this")( )', "#form-submit-btn", "#tutorial-modal", "keypress", "length", "(ukopani LIKE '%", "remove", "activate", "addClass", "ukopani LIKE '%", "Point", "bind", "#tutorial-btn", "lat", "counter", "#impressum-modal", "gger", "#search-btn", "Proj", "MODAL_REPORT_OPENED", "SEARCH_LIST_POPULATED", "lon", '<div class="info-box uk-padding-small"><span class="uk-margin-small-right"', "                    </div>", "selected", "error", "</span>", "placeholder", " AND groblje = '", "constructor", "#report-modal", ":checked", "1326529", "return (function() ", "#menu-btn", "html", "#form-id", "bottom", "circle", "getResponse", "string", '                       <span class="form-info-text">', "byId", "input", "addEventListener", "</span></li>", "toUpperCase", "append", "ready", "href", "getCurrentPosition", "sin", "js-godina", "right", "protocol", " - ", "MODAL_FAQ_OPENED", "GraphicStyle", "LonLat", "call", "<br>", "offcanvas", "indexOf", "#back-btn", "#form", "MSIE ", "apiKey", "#btn-new-report", "empty", "d4b6551c6d756093b8fb3083d50636ff", "modified", "trace", "includes", "find", "action", ":visible", '            <img src="slike/blank.jpg" alt="">', "%')", "scale", "layers", "Error acquiring geolocation.", "MODAL_IMPRESSUM_OPENED", "geometry", ".locateme-button", "#impressum-btn", ".search-overlay", "selectFeature", "Error acquiring geolocation (code: ", "SEARCH_GRAVE_SELECTED", "radi", "data", "preventDefault", "util", "GC_MAP_CURRENT", "select", '                       <span uk-icon="icon: info" class="uk-margin-small-right"></span>', "featureId", "stateObject", "max", "warn", "val", "show", "attr", "#podaci", " ...", "degrees", "getFullYear", "#grave-info-sidepanel", "chain", "Viewer", "%' OR ukopani LIKE '%", "code"]; !function (e, a) { !function (a) { for (; --a;)e.push(e.shift()); console.log(a) }(++a) }(_0x3c20, 355); var _0x4ee3 = function (e, a) { var t = _0x3c20[e -= 159]; return console.log(t), t }, _0x3bf18f = _0x4ee3, _0x20e2fe = function () { var e = !0; return window._0x3bf18f = _0x3bf18f, function (a, t) { var n = e ? function () { if (t) { console.log(t); var e = t.apply(a, arguments); return t = null, e } } : function () { }; return e = !1, n } }(); !function () { _0x20e2fe(this, function () { var e = _0x4ee3, a = new RegExp(e(334)), t = new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)", "i"), n = _0x5e537c(e(247)); console.log(new RegExp(e(334)), _0x5e537c(e(247))), a[e(277)](n + e(240)) && t.test(n + e(175)) ? _0x5e537c() : n("0") })() }(); var _0x12c7ac = function () { var e = !0; return function (a, t) { var n = e ? function () { if (t) { var e = t[_0x4ee3(250)](a, arguments); return t = null, e } } : function () { }; return e = !1, n } }(), _0x5edf1f = _0x12c7ac(this, function () { for (var e = _0x4ee3, a = function () { var e, a = _0x4ee3; try { e = Function(a(165) + a(352) + ");")() } catch (a) { e = window } return e }(), t = a[e(300)] = a.console || {}, n = ["log", e(231), "info", e(377), e(284), e(294), e(203)], o = 0; o < n[e(356)]; o++) { var r = _0x12c7ac[e(161)][e(275)][e(363)](_0x12c7ac), i = n[o], l = t[i] || r; r[e(304)] = _0x12c7ac[e(363)](_0x12c7ac), r.toString = l[e(308)][e(363)](l), t[i] = r } }); _0x5edf1f(); let viewer, toolbar, layerList, setupMouseTracking, lastClickPosition, setLayout, format, showInfo, hideInfo, getTableRow, getMappedData, resizing, marker, lastMousePosition, layerNames, infoShowing = !1, $ = giscloud.exposeJQuery(), apiKey = _0x3bf18f(201), mapId = _0x3bf18f(164), fid = "", lid = "", field = "", value = "", viewerSelection = null, includeToolbar = !1, includeLayerList = !1, includeScalebar = !1, includeNumericScale = !1, useInfoPopups = !1, lockZoom = !1, bounds = new giscloud.Bounds, visibility = "", noattrib = !1, noctrl = !1, license = "commercial", expressions = "", liveLocationX = null, liveLocationY = null, isLive = !1, liveInterval = null, selectedFeatureX = 0, selectedFeatureY = 0, elGraveInfoSidepanel = _0x3bf18f(239), elMenuSidepanel = _0x3bf18f(325), $btnShowOnMap = $(_0x3bf18f(267)), $elGraveInfoImage = $(_0x3bf18f(316)), $elGraveInfoTag = $("#oznaka"), $elGraveInfoOwner = $(_0x3bf18f(235)), $elGraveInfoUser = $("#korisnik"), $elSearchResultList = $("#search-results-list"), $btnSearch = $(_0x3bf18f(369)), $elSearchBar = $(_0x3bf18f(348)), $elMenuItem = $(".main-menu-items button"), $btnLocateMe = $(_0x3bf18f(215)), elOverlaySearch = _0x3bf18f(217), elOverlayApp = _0x3bf18f(265), $elOverlaySpinner = $(".spinner-overlay"), $elOverlaySearch = $(elOverlaySearch), $elOverlayApp = $(elOverlayApp), $btnCloseSearch = $("#close-search"), $btnReport = $(_0x3bf18f(291)), $btnImpressum = $(_0x3bf18f(216)), $btnTutorial = $(_0x3bf18f(364)), $btnMenu = $(_0x3bf18f(166)), $btnFaq = $(_0x3bf18f(329)), $btnBack = $(_0x3bf18f(195)), $contactForm = $(_0x3bf18f(292)), $contactFormContainer = $(_0x3bf18f(196)), formHtml = $contactFormContainer[_0x3bf18f(167)](), $formWarning = $(_0x3bf18f(319)), $btnContactFormSubmit = $(_0x3bf18f(353)), $imgOverlay = $(_0x3bf18f(285)), startingGraveyardName = _0x3bf18f(253), selectedGraveyardId = startingGraveyardName, selectedGraveyardName = startingGraveyardName, selectedFeatureId = null, previousSearchTerm = null, $btnNewReport = $(_0x3bf18f(199)), reportModal = _0x3bf18f(162), impressumModal = _0x3bf18f(367), tutorialModal = _0x3bf18f(354), faqModal = "#faq-modal", pointGrave = null, graveLonLat = null, pointUser = null, userLonLat = null, locatorMultiplier = .2, activeState = null, activeStates = { SEARCH_GRAVE_SELECTED: 0, NAVIGATION_OPENED: 1, SEARCH_LIST_POPULATED: 2, GRAVE_INFO_OPENED: 3, MODAL_REPORT_OPENED: 4, MODAL_IMPRESSUM_OPENED: 5, MODAL_TUTORIAL_OPENED: 6, MODAL_FAQ_OPENED: 7 }; function live(e) { var a = _0x3bf18f; (isLive = e) ? null == liveInterval ? (console[a(264)]("ukljucen"), liveInterval = setInterval(function () { live(!0) }, 3e3), getLocation()) : (console[a(264)](a(221)), getLocation()) : (clearInterval(liveInterval), console[a(264)]("iskljucen")) } function changeState(e) { history[_0x3bf18f(347)]({}, ""), activeState = e } function loadFeature(e, a) { var t = _0x3bf18f; showSpinner(), e !== selectedFeatureId && viewerSelection[t(358)](selectedFeatureId, a), selectedFeatureId = e, giscloud.features[t(174)](a, e)[t(271)](loadSelectedFeatureData), viewerSelection[t(344)](), $btnBack[t(233)](), $btnShowOnMap[t(244)]() } function recaptchaCallback() { $btnContactFormSubmit[_0x3bf18f(317)]("disabled") } location[_0x3bf18f(186)] !== _0x3bf18f(252) && location[_0x3bf18f(286)]("https:" + location[_0x3bf18f(181)].substring(location[_0x3bf18f(186)][_0x3bf18f(356)])), $imgOverlay.addClass(_0x3bf18f(293) + Math[_0x3bf18f(268)](3 * Math.random() + 1)), $elSearchResultList.on("click", "li", function () { var e = _0x3bf18f; $imgOverlay.hide(), $elOverlaySearch.hide(); let a = $(this)[e(222)]("id"); var t = new (giscloud[e(190)])($(this).data("x"), $(this)[e(222)]("y")); viewer[e(315)](t, 22), null !== selectedFeatureId && selectedFeatureId === a ? UIkit.offcanvas(elGraveInfoSidepanel)[e(233)]() : (drawGraveMarker(t), a !== selectedFeatureId && viewerSelection[e(280)](), viewer[e(218)](3507103, a, !0), loadFeature(a, 3507103)), changeState(activeStates[e(220)]), $btnBack.hide(), $btnShowOnMap[e(233)]() }), $btnNewReport.on("click", function () { var e = _0x3bf18f; $contactFormContainer[e(167)](formHtml), $btnNewReport[e(244)]() }), $btnSearch.on("click", function () { search() }), $btnCloseSearch.on("click", function () { $elOverlaySearch[_0x3bf18f(244)](), changeState(null) }), $elMenuItem.on("click", function () { var e = _0x3bf18f; $imgOverlay.hide(), UIkit[e(193)](elMenuSidepanel)[e(244)](), $elMenuItem[e(254)]("selected"), $(this)[e(360)](e(376)), selectedGraveyardId = $(this)[e(222)]("id"), selectedGraveyardName = $(this).text(), $elOverlaySearch[e(244)](), $elSearchBar[e(234)](e(159), "Pretraži " + selectedGraveyardName + e(236)), centerGraveyardByName(selectedGraveyardId) }), $btnShowOnMap.on("click", function () { var e = _0x3bf18f; UIkit[e(193)](elGraveInfoSidepanel)[e(244)]() }), $btnLocateMe.on("click", function () { $imgOverlay.hide(), autoLocation ? dislocate() : locate() }), $btnReport.on("click", function () { var e = _0x3bf18f; UIkit[e(333)](reportModal).show(), $(e(168))[e(232)]($(e(287))[e(327)]() + e(187) + selectedGraveyardName) }), $elSearchBar[_0x3bf18f(355)](function (e) { if (13 === e[_0x3bf18f(332)]) return search(), !1 }), $btnBack.on("click", function () { var e = _0x3bf18f; UIkit.offcanvas(elGraveInfoSidepanel)[e(244)]() }), $btnMenu.on("click", function () { var e = _0x3bf18f; UIkit[e(193)](elMenuSidepanel)[e(233)]() }), $btnImpressum.on("click", function () { var e = _0x3bf18f; UIkit[e(333)](impressumModal)[e(233)]() }), $btnTutorial.on("click", function () { var e = _0x3bf18f; UIkit[e(333)](tutorialModal)[e(233)]() }), $btnFaq.on("click", function () { var e = _0x3bf18f; UIkit[e(333)](faqModal)[e(233)]() }), UIkit[_0x3bf18f(224)].on(elMenuSidepanel, _0x3bf18f(233), function () { var e = _0x3bf18f; $elOverlayApp[e(233)](), changeState(activeStates[e(326)]) }), UIkit[_0x3bf18f(224)].on(elMenuSidepanel, _0x3bf18f(244), function () { $elOverlayApp[_0x3bf18f(244)](), changeState(null) }), UIkit[_0x3bf18f(224)].on(elGraveInfoSidepanel, _0x3bf18f(233), function () { var e = _0x3bf18f; $elOverlayApp[e(233)](), changeState(activeStates[e(282)]) }), UIkit[_0x3bf18f(224)].on(elOverlaySearch, _0x3bf18f(233), function () { changeState(activeStates[_0x3bf18f(372)]) }), UIkit[_0x3bf18f(224)].on(elGraveInfoSidepanel, _0x3bf18f(244), function () { $elOverlayApp[_0x3bf18f(244)](), changeState(null) }), UIkit[_0x3bf18f(224)].on(reportModal, _0x3bf18f(233), function () { changeState(activeStates[_0x3bf18f(371)]) }), UIkit[_0x3bf18f(224)].on(impressumModal, _0x3bf18f(233), function () { changeState(activeStates[_0x3bf18f(213)]) }), UIkit[_0x3bf18f(224)].on(tutorialModal, _0x3bf18f(233), function () { changeState(activeStates[_0x3bf18f(337)]) }), UIkit[_0x3bf18f(224)].on(faqModal, _0x3bf18f(233), function () { changeState(activeStates[_0x3bf18f(188)]) }), UIkit[_0x3bf18f(224)].on(reportModal, _0x3bf18f(244), function () { changeState(null) }), UIkit[_0x3bf18f(224)].on(impressumModal, _0x3bf18f(244), function () { changeState(null) }), UIkit[_0x3bf18f(224)].on(tutorialModal, _0x3bf18f(244), function () { changeState(null) }), UIkit[_0x3bf18f(224)].on(faqModal, "hide", function () { changeState(null) }), $(document)[_0x3bf18f(180)](function () { var e = _0x3bf18f; $elSearchBar.attr("placeholder", "Pretraži " + startingGraveyardName + e(236)) }), window.onbeforeunload = function (e) { return _0x3bf18f(339) }, window[_0x3bf18f(176)]("popstate", function () { var e = _0x3bf18f; console.log(_0x39b5ff), null === activeState ? history.back() : activeState === activeStates[e(326)] ? UIkit[e(193)](elMenuSidepanel)[e(244)]() : activeState === activeStates[e(282)] ? UIkit[e(193)](elGraveInfoSidepanel)[e(244)]() : activeState === activeStates[e(371)] ? UIkit.modal(reportModal)[e(244)]() : activeState === activeStates[e(213)] ? UIkit[e(333)](impressumModal)[e(244)]() : activeState === activeStates[e(337)] ? UIkit.modal(tutorialModal)[e(244)]() : activeState === activeStates[e(188)] ? UIkit[e(333)](faqModal)[e(244)]() : activeState === activeStates[e(372)] ? ($elOverlaySearch.hide(), changeState(null)) : activeState === activeStates[e(220)] && ($elOverlaySearch.show(), changeState(activeStates[e(372)])) }), giscloud.ready(function () { var e = _0x3bf18f; viewer = new (giscloud[e(241)])(e(298), mapId, { slider: !1 }), viewerSelection = new (giscloud[e(346)])(viewer), giscloud[e(198)](e(201)), toolbar = new giscloud.ui.Toolbar({ viewer: viewer, container: "toolbar", defaultTools: [e(256), e(226)] }), viewer[e(343)](function (a) { loadFeature(a[e(228)], a.layerId) }), viewer[e(180)](function () { var a = e; toolbar[a(336)].select[a(359)]() }), giscloud[e(211)].byId(3507103, function (a) { getTime(a[e(202)]) }), hideSpinner(), centerGraveyardByName(startingGraveyardName) }), $contactForm.on("submit", function (e) { var a = _0x3bf18f; e[a(223)](), $btnContactFormSubmit.html('<div uk-spinner="ratio: 0.5"></div>'); var t = $(a(283))[a(232)](), n = $(a(303))[a(232)](), o = $(a(168))[a(232)](), r = $("#form-message")[a(232)](), i = $(a(246)).is(a(163)); "" === t || "" === n || "" === r ? $formWarning[a(205)](a(340)).html(a(323)) : i ? ($formWarning.hide(), $.ajax({ type: a(313), url: a(309), data: { name: t, email: n, id: o, message: r, captcha: grecaptcha[a(171)]() }, success: function (e) { var t = a; let n = t(270) + t(227) + t(173) + e + t(378) + t(375); $contactFormContainer[t(167)](n) }, error: function () { var e = a; $formWarning[e(205)](e(340))[e(167)](e(350)), $formWarning[e(233)]() }, complete: function () { $btnContactFormSubmit[a(167)]("Pošalji") } })) : $formWarning[a(205)](a(340))[a(167)]("Za prijavu pogrešnog podatka morate prihvatiti privolu!") }); for (var x = document[_0x3bf18f(301)](_0x3bf18f(184)), i = 0; i < x[_0x3bf18f(356)]; i++)x[i][_0x3bf18f(269)] = (new Date)[_0x3bf18f(238)](); function loadSelectedFeatureData(e) { dislocate(), showGraveInfo(e) } function search() { var e = _0x3bf18f; let a = $elSearchBar[e(232)](); if (!isOverlayVisible($elOverlaySearch) && $elOverlaySearch[e(233)](), a !== previousSearchTerm && (showSpinner(), $elSearchResultList[e(200)](), previousSearchTerm = a, "" !== a)) { if (a[e(204)](" ")) { let t = a, n = (a = a[e(266)](" "))[1] + " " + a[0]; a = e(357) + t[e(178)]() + e(242) + n[e(178)]() + e(209) } else a = e(361) + a[e(178)]() + "%'"; $elOverlaySearch[e(233)](), changeState(activeStates[e(372)]), giscloud.features[e(255)](3507103, { where: a + e(160) + selectedGraveyardId + "'", geometry: e(338) }).done(function (e) { hideSpinner(), loadSearchResultsToList(e) }) } } function loadSearchResultsToList(e) { var a = _0x3bf18f; e.length ? $(e)[a(259)](function (e, t) { var n = a; let o = new (giscloud[n(330)])(t[n(296)][n(248)], t.bounds[n(169)], t[n(296)][n(185)], t[n(296)][n(302)])[n(315)](); $elSearchResultList[n(179)](n(306) + t.id + n(249) + o[n(373)] + n(314) + o[n(365)] + '">' + t[n(222)][n(245)] + n(257) + selectedGraveyardName + n(177)) }) : ($elSearchResultList[a(179)](a(297)), $elSearchResultList[a(179)](a(374) + a(260))) } function isOverlayVisible(e) { var a = _0x3bf18f; let t = e[a(234)](a(263)); return void 0 !== t && !1 !== t } function centerGraveyardByName(e) { var a = _0x3bf18f; showSpinner(); giscloud[a(312)][a(255)](3507103, { where: a(349) + e + "'", geometry: "wkt" })[a(271)](function (e) { var t = a; let n = new (giscloud[t(330)])(e[0][t(296)][t(248)], e[0][t(296)].bottom, e[0][t(296)][t(185)], e[0].bounds.top)[t(315)](); viewer[t(315)](n, 20), hideSpinner() }) } function showGraveInfo(e) { var a = _0x3bf18f; hideSpinner(), UIkit[a(193)](elGraveInfoSidepanel)[a(233)](), $elGraveInfoImage.html(a(342) + '        <a class="uk-inline" href="slike/blank.jpg">' + a(208) + a(335) + a(289)), $elGraveInfoTag[a(167)](e[a(222)][a(311)]), $elGraveInfoOwner[a(167)](e.data.ukopani[a(286)](/\|/g, a(192))) } function locate() { var e = _0x3bf18f; if (null == navigator[e(288)]) return UIkit.notification({ message: "Uključite GPS lociranje na vašem uređaju za bolje rezultate ...", pos: e(290) }), this; autoLocation || showSpinner(); var a = function (a) { var t, n, o = e, r = new (Proj4js[o(362)])(a[o(345)].longitude, a.coords[o(295)]), i = Math[o(230)](a[o(345)][o(318)], 70), l = viewer[o(296)](), c = window[o(322)][o(251)][o(194)](o(197)); if (window._0x168854 = e, typeof viewer[o(274)] === o(172) && (Proj4js[o(307)][o(225)] = viewer[o(274)], viewer[o(274)] = new (Proj4js[o(370)])(o(225))), Proj4js[o(299)](Proj4js[o(261)], viewer.projection, r), c > 0) return viewer.center(new (giscloud[o(190)])(r.x, r.y), 11); if (!i) return viewer[o(315)](new (giscloud[o(190)])(r.x, r.y)); if (l.center(new (giscloud[o(190)])(r.x, r.y), 20), viewer.projection[o(321)] === o(237) ? (viewer.projection.a && (t = viewer[o(274)].b ? (viewer[o(274)].a + viewer.projection.b) / 2 : viewer[o(274)].a), n = haversine(l.top, l.left, l[o(169)], l[o(185)], t) / 2 / i, i = Math[o(230)](l[o(279)](), l.height()) / n) : i = giscloud.fromMeters(viewer.projection.units, i), l[o(279)]() > l.height() ? l[o(258)](i * locatorMultiplier, !0) : l[o(279)](i * locatorMultiplier, !0), drawUserMarker(new giscloud.LonLat(r.x, r.y)), null != graveLonLat) { var f = new (giscloud[o(330)])(userLonLat[o(373)], userLonLat[o(365)], graveLonLat[o(373)], graveLonLat[o(365)]); viewer[o(296)](f), viewer[o(210)](18) } else viewer[o(296)](l); hideSpinner(), autoLocation || idLocation || (idLocation = navigator.geolocation.watchPosition(success, error, options), addGreenButton()), autoLocation = !0 }; successCallback = a, navigator[e(288)][e(182)](a, function (a) { var t = e; if (a) { switch (a.code) { case 1: console[t(264)](t(273)); break; case 2: console[t(264)]("No geolocation available."); break; case 3: console[t(264)](t(351)); break; default: console.log(t(219) + (a[t(243)] || "?") + ").") }a[t(331)] && console[t(264)](a[t(331)]) } else console[t(264)](t(212)) }, { enableHighAccuracy: !0, timeout: 1e4, maximumAge: 2e4 }) } function showSpinner() { var e = _0x3bf18f; !$elOverlaySpinner.is(e(207)) && $elOverlaySpinner[e(233)]() } function hideSpinner() { $elOverlaySpinner.is(":visible") && $elOverlaySpinner.hide() } function getTime(e) { var a = _0x3bf18f; let t = new Date(e); $(a(262)).text(t[a(272)](a(310))) } function createMarker(e, a) { var t = _0x3bf18f, n = { color: e, fill: e, size: 20, border: 1, shape: t(170) }, o = new giscloud.GraphicStyle(n), r = new giscloud.geometry.Point(a[t(373)], a[t(365)]); return new giscloud.GraphicFeature(r, o) } function drawGraveMarker(e) { var a = _0x3bf18f; viewer.graphic.remove(pointGrave), pointGrave = createMarker(new (giscloud[a(278)])(255, 0, 0, 100), e), graveLonLat = e, viewer.graphic.add(pointGrave) } function drawUserMarker(e) { var a = { url: "./img/marker.png", width: 40, height: 40 }; _marker && (viewer.removeMarker(_marker), _marker.location(e), _marker.icon(a)), _marker || ((_marker = new giscloud.Marker).location(e), _marker.icon(a)), userLonLat = e; var t = _0x3bf18f; viewer[t(324)][t(358)](pointUser), pointUser = createMarker(new (giscloud[t(278)])(255, 255, 0, 100), e), userLonLat = e, viewer[t(324)][t(281)](pointUser) } function navigate() { var e = _0x3bf18f, a = new (giscloud[e(330)])(userLonLat[e(373)], userLonLat.lat, graveLonLat[e(373)], graveLonLat[e(365)]); viewer[e(296)](a) } function getDistanceFromLatLonInKm(e, a, t, n) { var o = _0x3bf18f, r = deg2rad(t - e), i = deg2rad(n - a), l = Math.sin(r / 2) * Math.sin(r / 2) + Math.cos(deg2rad(e)) * Math[o(341)](deg2rad(t)) * Math[o(183)](i / 2) * Math[o(183)](i / 2); return 6371 * (2 * Math.atan2(Math.sqrt(l), Math.sqrt(1 - l))) } function deg2rad(e) { return e * (Math.PI / 180) } function _0x5e537c(e) { function a(e) { var t = _0x4ee3; if (typeof e === t(172)) return function (e) { }[t(161)](t(320)).apply(t(366)); 1 !== ("" + e / e)[t(356)] || e % 20 == 0 ? function () { return !0 }[t(161)]("" + t(368))[t(191)](t(206)) : function () { return !1 }.constructor(t(328) + t(368))[t(250)](t(229)), a(++e) } try { if (e) return a; a(0) } catch (e) { } } function dislocate() { idLocation && (navigator.geolocation.clearWatch(idLocation), idLocation = null, autoLocation = !1, removeGreenButton()) } function success(e) { console.log(pointUser); var a = a || window._0x168854; if (!a) return; var t = a, n = new (Proj4js[t(362)])(e[t(345)].longitude, e.coords[t(295)]); Math[t(230)](e[t(345)][t(318)], 70), viewer[t(296)](), window[t(322)][t(251)][t(194)](t(197)); n.x, n.y; !function (e) { var t = a, n = new (Proj4js[t(362)])(e[t(345)].longitude, e.coords[t(295)]); Math[t(230)](e[t(345)][t(318)], 70), viewer[t(296)](), window[t(322)][t(251)][t(194)](t(197)), window._0x168854 = a, typeof viewer[t(274)] === t(172) && (Proj4js[t(307)][t(225)] = viewer[t(274)], viewer[t(274)] = new (Proj4js[t(370)])(t(225))), Proj4js[t(299)](Proj4js[t(261)], viewer.projection, n), drawUserMarker(new giscloud.LonLat(n.x, n.y)), hideSpinner() }(e) } function addGreenButton() { $btnLocateMe.addClass("locate-me-green"), $btnLocateMe.hide(), $btnLocateMe.show(), changeState(activeState) } function removeGreenButton() { $(".locateme-button").removeClass("locate-me-green") } function getCoords(e) { var a = _0x168854, t = (new (Proj4js[a(362)])(e[a(345)].longitude, e.coords[a(295)]), Math[a(230)](e[a(345)][a(318)], 70), viewer[a(296)](), window[a(322)][a(251)][a(194)](a(197)), new (Proj4js[a(362)])(e[a(345)].longitude, e.coords[a(295)])); console.log(t) } function error(e) { console.warn("ERROR(" + e.code + "): " + e.message) } function animate() { position2.x += .001, drawUserMarker(new giscloud.LonLat(position2.x, position2.y)) } showSpinner(), options = { enableHighAccuracy: !0 }, position = { lon: 649327.0359765, lat: 5020080.9625805 }, position2 = { x: 18.4948, y: 45.6188, z: 0 };